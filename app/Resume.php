<?php

namespace App;

use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Str;

class Resume extends Model
{
    protected $guarded = [];
    public function user(){
        return $this->belongsTo('App\User');
    }

    public function skills(){
        return $this->belongsToMany("App\Skill");
    }

    public function font(){
        return $this->belongsTo('App\Font');
    }

    public function theme(){
        return $this->belongsTo('App\Theme');
    }

    public function model(){
        return $this->belongsTo('App\ResumeModel');
    }

    public function hobbies(){
        return $this->belongsToMany("App\Hobby");
    }

    public function languages(){
        return $this->belongsToMany("App\Language");
    }

    public function experiences(){
        return $this->hasMany('App\Experience');
    }

    public function achievements(){
        return $this->hasMany('App\Achievement');
    }

    public function educations(){
        return $this->hasMany('App\Education');
    }

    public function awards(){
        return $this->hasMany('App\Award');
    }

    public function checkCode($random){
        while(!Resume::select('code')->where('code','like',$random.'%')->get()->isEmpty()){
            $random = Str::random(28);
        }
        return $random;
    }

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        static::saving(function($model){
            $model->code = $model->checkCode(Str::random(16));
        });
        static::updating(function($model){
            if($model->code == null)
                $model->code = $model->checkCode(Str::random(16));
        });
    }
}
